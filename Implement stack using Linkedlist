//Implementation of stack using linked list
import java.util.*;
import java.lang.*;
public class StackUsingLinkedlist{
   
   static class Node{
       int data;
       Node next;
       Node(int data)
       {
           this.data=data;
           next=null;
       }
   }
   Node top;
   StackUsingLinkedlist()
   {
       this.top=null;
   }
   public void push(int new_data)
   {
       
      Node temp =  new Node(new_data);
      if (temp == null) {
			System.out.print("\nHeap Overflow");
			return;
		}
      temp.next=top;
      top=temp;
   }
   public void display()
   {
       if(top==null)
       {
           System.out.print("underflow");
           return;
       }
       Node n = top;
       while(n!=null)
       {
           System.out.print(n.data+" ");
           n=n.next;
       }
   }
   
   public  boolean isEmpty()
   {
       return top == null;
   }
   public int peek()
   {
       if(!isEmpty())
       {
           return top.data;
       }
       else
       {
           return -1;
       }
   }
   public void pop()
   {
       if(top!=null)
       {
           top=top.next;
       }
       else
       {
           System.out.print("underflow");
           return;
       }
   }

   public static void main(String[] args)
   {
      StackUsingLinkedlist s = new StackUsingLinkedlist();
      s.push(10);
       s.push(20);
      s.push(30);
      s.push(40);
    
      s.display();
      System.out.printf("\nTop element is %d\n", s.peek());
      s.pop();
      s.pop();
      s.display();
      System.out.printf("\nTop element is %d\n", s.peek());
   }
   
    
}
